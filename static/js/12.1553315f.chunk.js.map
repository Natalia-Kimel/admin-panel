{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","views/app-views/productList/index.js"],"names":["renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","EllipsisDropdown","overlay","menu","placement","trigger","EllipsisOutlined","defaultProps","Option","Select","categories","ProductList","history","useHistory","useState","ProductListData","list","setList","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","viewDetails","row","push","deleteRow","data","length","forEach","elm","utils","deleteArrayRow","tableColumns","title","dataIndex","render","_","record","image","sorter","a","b","antdTableSorter","price","displayType","value","Math","round","toFixed","prefix","thousandSeparator","Item","Flex","alignItems","EyeOutlined","DeleteOutlined","rowSelection","onChange","key","rows","justifyContent","mobileFlex","placeholder","SearchOutlined","e","currentTarget","searchArray","wildCardSearch","onSearch","defaultValue","style","minWidth","filterArray","map","PlusCircleOutlined","block","columns","dataSource","rowKey","preserveSelectedRowKeys"],"mappings":"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","file":"static/js/12.1553315f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import React, {useState} from 'react'\nimport { Card, Table, Select, Input, Button, Menu } from 'antd';\nimport ProductListData from \"assets/data/product-list.data.json\"\nimport { EyeOutlined, DeleteOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex'\nimport NumberFormat from 'react-number-format';\nimport { useHistory } from \"react-router-dom\";\nimport utils from 'utils'\n\nconst { Option } = Select\n\nconst categories = ['Cloths', 'Bags', 'Shoes', 'Watches', 'Devices']\n\nconst ProductList = () => {\n\tlet history = useHistory();\n\tconst [list, setList] = useState(ProductListData)\n\tconst [selectedRows, setSelectedRows] = useState([])\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\n\n\tconst dropdownMenu = row => (\n\t\t<Menu>\n\t\t\t<Menu.Item onClick={() => viewDetails(row)}>\n\t\t\t\t<Flex alignItems=\"center\">\n\t\t\t\t\t<EyeOutlined />\n\t\t\t\t\t<span className=\"ml-2\">View Details</span>\n\t\t\t\t</Flex>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item onClick={() => deleteRow(row)}>\n\t\t\t\t<Flex alignItems=\"center\">\n\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t<span className=\"ml-2\">{selectedRows.length > 0 ? `Delete (${selectedRows.length})` : 'Delete'}</span>\n\t\t\t\t</Flex>\n\t\t\t</Menu.Item>\n\t\t</Menu>\n\t);\n\t\n\tconst addProduct = () => {\n\t\thistory.push(`/app/apps/ecommerce/add-product`)\n\t}\n\t\n\tconst viewDetails = row => {\n\t\thistory.push(`/app/apps/ecommerce/edit-product/${row.id}`)\n\t}\n\t\n\tconst deleteRow = row => {\n\t\tconst objKey = 'id'\n\t\tlet data = list\n\t\tif(selectedRows.length > 1) {\n\t\t\tselectedRows.forEach(elm => {\n\t\t\t\tdata = utils.deleteArrayRow(data, objKey, elm.id)\n\t\t\t\tsetList(data)\n\t\t\t\tsetSelectedRows([])\n\t\t\t})\n\t\t} else {\n\t\t\tdata = utils.deleteArrayRow(data, objKey, row.id)\n\t\t\tsetList(data)\n\t\t}\n\t}\n\n\tconst tableColumns = [\n\t\t{\n\t\t\ttitle: 'ID',\n\t\t\tdataIndex: 'id'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Product',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus size={60} type=\"square\" src={record.image} name={record.name}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Category',\n\t\t\tdataIndex: 'category',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'category')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Price',\n\t\t\tdataIndex: 'price',\n\t\t\trender: price => (\n\t\t\t\t<div>\n\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\tdisplayType={'text'} \n\t\t\t\t\t\tvalue={(Math.round(price * 100) / 100).toFixed(2)} \n\t\t\t\t\t\tprefix={'$'} \n\t\t\t\t\t\tthousandSeparator={true} \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'price')\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t];\n\t\n\tconst rowSelection = {\n\t\tonChange: (key, rows) => {\n\t\t\tsetSelectedRows(rows)\n\t\t\tsetSelectedRowKeys(key)\n\t\t}\n\t};\n\n\tconst onSearch = e => {\n\t\tconst value = e.currentTarget.value\n\t\tconst searchArray = e.currentTarget.value? list : ProductListData\n\t\tconst data = utils.wildCardSearch(searchArray, value)\n\t\tsetList(data)\n\t\tsetSelectedRowKeys([])\n\t}\n\n\tconst handleShowCategory = value => {\n\t\tif(value !== 'All') {\n\t\t\tconst key = 'category'\n\t\t\tconst data = utils.filterArray(ProductListData, key, value)\n\t\t\tsetList(data)\n\t\t} else {\n\t\t\tsetList(ProductListData)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card>\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\tdefaultValue=\"All\" \n\t\t\t\t\t\t\tclassName=\"w-100\" \n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \n\t\t\t\t\t\t\tonChange={handleShowCategory} \n\t\t\t\t\t\t\tplaceholder=\"Category\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option value=\"All\">All</Option>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcategories.map(elm => (\n\t\t\t\t\t\t\t\t\t<Option key={elm} value={elm}>{elm}</Option>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</Flex>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={addProduct} type=\"primary\" icon={<PlusCircleOutlined />} block>Add product</Button>\n\t\t\t\t</div>\n\t\t\t</Flex>\n\t\t\t<div className=\"table-responsive\">\n\t\t\t\t<Table \n\t\t\t\t\tcolumns={tableColumns} \n\t\t\t\t\tdataSource={list} \n\t\t\t\t\trowKey='id' \n\t\t\t\t\trowSelection={{\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\n\t\t\t\t\t\t...rowSelection,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n\nexport default ProductList"],"sourceRoot":""}