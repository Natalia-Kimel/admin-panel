{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/userList/index.js"],"names":["renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","UserList","state","users","loading","deleteUser","userId","setState","prevState","filter","item","message","success","content","duration","editProfile","history","push","APP_PREFIX_PATH","fetch","then","response","json","data","catch","error","this","tableColumns","title","dataIndex","render","_","record","email","address","street","suite","city","phone","danger","bodyStyle","padding","columns","dataSource","rowKey","Component","withRouter"],"mappings":"sIAIMA,EAAe,SAAAC,GACpB,OAAO,cAAC,IAAD,2BAAYA,GAAZ,IAAmBC,UAAS,qBAAgBD,EAAME,MAAlD,SAA2DF,EAAMG,SAgC1DC,IA7Ba,SAAAJ,GAAU,IAC7BK,EAAqFL,EAArFK,KAAMC,EAA+EN,EAA/EM,OAAQC,EAAuEP,EAAvEO,SAAUC,EAA6DR,EAA7DQ,GAAIN,EAAyDF,EAAzDE,KAAMO,EAAmDT,EAAnDS,IAAKC,EAA8CV,EAA9CU,KAAMC,EAAwCX,EAAxCW,KAAMC,EAAkCZ,EAAlCY,MAAOC,EAA2Bb,EAA3Ba,IAAKV,EAAsBH,EAAtBG,KAAMW,EAAgBd,EAAhBc,YAC7E,OACC,sBAAKb,UAAU,0CAAf,UACEF,EAAa,CAACW,OAAMD,MAAKP,OAAMS,OAAMC,QAAOC,MAAKV,SAClD,sBAAKF,UAAU,OAAf,UACC,gCAEEa,EACA,qBAAKC,QAAS,kBAAMD,EAAY,CAACT,OAAME,WAAUE,MAAKD,QAAMP,UAAU,+BAAtE,SAAsGI,IAEtG,qBAAKJ,UAAU,qBAAf,SAAqCI,IAEtC,+BAAOC,OAER,qBAAKL,UAAU,oCAAf,SAAoDM,Y,6LChBlDS,E,4MACFC,MAAQ,CACJC,MAAO,GACPC,SAAS,G,EAebC,WAAa,SAAAC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBL,MAAOK,EAAUL,MAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKjB,KAAOa,SAEtDK,IAAQC,QAAQ,CAAEC,QAAQ,gBAAD,OAAkBP,GAAUQ,SAAU,K,EAGnEC,YAAc,SAAAT,GACV,EAAKrB,MAAM+B,QAAQC,KAAnB,UAA2BC,IAA3B,yBAA2DZ,K,kEApB1C,IAAD,OAChBa,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKhB,SAAS,CAAEJ,MAAOoB,EAAMnB,SAAS,OAEzCoB,OAAM,SAAAC,GACHd,IAAQc,MAAM,8HACd,EAAKlB,SAAS,CAAEH,SAAS,S,+BAe3B,IAAD,SACsBsB,KAAKxB,MAAxBC,EADH,EACGA,MAAOC,EADV,EACUA,QAETuB,EAAe,CACjB,CACIC,MAAO,QACPC,UAAW,OACXC,OAAQ,SAACC,EAAGC,GAAJ,OACJ,qBAAK9C,UAAU,SAAf,SACI,cAAC,IAAD,CAAcI,KAAM0C,EAAO1C,KAAME,SAAUwC,EAAOC,YAI9D,CACIL,MAAO,UACPC,UAAW,UACXC,OAAQ,SAAAI,GAAO,OACX,yCAAUA,EAAQC,OAAlB,aAA6BD,EAAQE,MAArC,aAA+CF,EAAQG,UAG/D,CACIT,MAAO,QACPC,UAAW,QACXC,OAAQ,SAAAQ,GAAK,OACT,yCAAUA,OAGlB,CACIV,MAAO,UACPE,OAAQ,SAACC,EAAGC,GAAJ,OACJ,sBAAK9C,UAAU,aAAf,UACI,cAAC,IAAD,CAAS0C,MAAM,OAAf,SACI,cAAC,IAAD,CACIzC,KAAK,UACLQ,KAAM,cAAC,IAAD,IACNK,QAAS,kBAAM,EAAKe,YAAYiB,EAAOvC,KACvCG,KAAK,YAGb,cAAC,IAAD,CAASgC,MAAM,SAAf,SACI,cAAC,IAAD,CACIW,QAAM,EACN5C,KAAM,cAAC,IAAD,IACNK,QAAS,kBAAM,EAAKK,WAAW2B,EAAOvC,KACtCG,KAAK,kBAQ7B,OACI,cAAC,IAAD,CAAM4C,UAAW,CAAEC,QAAS,GAA5B,SACKrC,EACG,cAAC,IAAD,IAEA,cAAC,IAAD,CACIsC,QAASf,EACTgB,WAAYxC,EACZyC,OAAO,a,GAzFRC,aAiGRC,sBAAW7C","file":"static/js/17.a74d191b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Card, Table, Tooltip, message, Button, Spin } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\n\nclass UserList extends Component {\n    state = {\n        users: [],\n        loading: true,\n    };\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ users: data, loading: false });\n            })\n            .catch(error => {\n                message.error('Ошибка загрузки данных');\n                this.setState({ loading: false });\n            });\n    }\n\n    deleteUser = userId => {\n        this.setState(prevState => ({\n            users: prevState.users.filter(item => item.id !== userId),\n        }));\n        message.success({ content: `Deleted user ${userId}`, duration: 2 });\n    };\n\n    editProfile = userId => {\n        this.props.history.push(`${APP_PREFIX_PATH}/edit-profile/${userId}`); \n    };\n\n    render() {\n        const { users, loading } = this.state;\n\n        const tableColumns = [\n            {\n                title: 'User ',\n                dataIndex: 'name',\n                render: (_, record) => (\n                    <div className=\"d-flex\">\n                        <AvatarStatus name={record.name} subTitle={record.email} />\n                    </div>\n                ),\n            },\n            {\n                title: 'Address',\n                dataIndex: 'address',\n                render: address => (\n                    <span>{`${address.street}, ${address.suite}, ${address.city}`}</span>\n                ),\n            },\n            {\n                title: 'Phone',\n                dataIndex: 'phone',\n                render: phone => (\n                    <span>{`${phone}`}</span>\n                ),\n            },\n            {\n                title: 'Actions',\n                render: (_, record) => (\n                    <div className=\"text-right\">\n                        <Tooltip title=\"View\">\n                            <Button\n                                type=\"primary\"\n                                icon={<EyeOutlined />}\n                                onClick={() => this.editProfile(record.id)}\n                                size=\"small\"\n                            />\n                        </Tooltip>\n                        <Tooltip title=\"Delete\">\n                            <Button\n                                danger\n                                icon={<DeleteOutlined />}\n                                onClick={() => this.deleteUser(record.id)}\n                                size=\"small\"\n                            />\n                        </Tooltip>\n                    </div>\n                ),\n            },\n        ];\n\n        return (\n            <Card bodyStyle={{ padding: 0 }}>\n                {loading ? (\n                    <Spin />\n                ) : (\n                    <Table\n                        columns={tableColumns}\n                        dataSource={users}\n                        rowKey=\"id\"\n                    />\n                )}\n            </Card>\n        );\n    }\n}\n\nexport default withRouter(UserList);"],"sourceRoot":""}